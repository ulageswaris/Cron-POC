name: ECR Secrets Update

on:
  push:
    branches: [ "main" ]
  #schedule:
  #- cron: "0 */1 * * *"

jobs:

  build:

    runs-on: [self-hosted, runner-1]

    steps:
    - uses: actions/checkout@v3
    - name: Docker Check
      run: docker --version
      
    - name: AWS CLI Check
      run: aws --version
      
    - name: Kubectl Install
      run: |
        curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.23.6/bin/linux/amd64/kubectl
        chmod +x kubectl
        mkdir -p ~/.local/bin
        mv ./kubectl ~/.local/bin/kubectl
        kubectl version --client
        
    - name: Configure AWS credentials 
      uses: aws-actions/configure-aws-credentials@v1 
      with: 
        aws-access-key-id:  ${{secrets.AWS_CP_IAM_Access_Key}} 
        aws-secret-access-key: ${{secrets.AWS_CP_IAM_Secret_Key}} 
        aws-region:  ${{secrets.AWS_CP_Region}}
        
    - name: Configure the Kubernetes Cluster
      run: |
        aws eks --region ${{secrets.AWS_CP_Region}} update-kubeconfig --name ${{secrets.AWS_CP_CLUSTER_NAME}}
        kubectl get nodes
        
    - name: Deleting the existing secrets
      run: |
        kubectl delete secrets image-pull-secrets -n dev
        kubectl delete secrets image-pull-secrets -n flux-system
    
    - name: Updating the secrets
      run: |
        kubectl create secret docker-registry image-pull-secrets --docker-server=${{secrets.AWS_CP_ACCOUNT_NUMBER}}.dkr.ecr.us-east-1.amazonaws.com --docker-username=AWS --docker-password=$(aws --region us-east-1 ecr get-login-password) -n dev 
        kubectl create secret docker-registry image-pull-secrets --docker-server=${{secrets.AWS_CP_ACCOUNT_NUMBER}}.dkr.ecr.us-east-1.amazonaws.com --docker-username=AWS --docker-password=$(aws --region us-east-1 ecr get-login-password) -n flux-system
